// <auto-generated />
using System;
using JobFormAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace JobFormAPI.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("JobFormAPI.Models.Field", b =>
                {
                    b.Property<int>("FieldId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FieldId"), 1L, 1);

                    b.Property<string>("FieldName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FieldValue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SectionId")
                        .HasColumnType("int");

                    b.HasKey("FieldId");

                    b.HasIndex("SectionId");

                    b.ToTable("Fields");

                    b.HasData(
                        new
                        {
                            FieldId = 1,
                            FieldName = "Description",
                            FieldValue = "General repair works",
                            SectionId = 1
                        },
                        new
                        {
                            FieldId = 2,
                            FieldName = "Time Estimate",
                            FieldValue = "2 hours",
                            SectionId = 1
                        },
                        new
                        {
                            FieldId = 3,
                            FieldName = "Customer Notes",
                            FieldValue = "Be careful with the garden",
                            SectionId = 2
                        },
                        new
                        {
                            FieldId = 4,
                            FieldName = "Special Requirements",
                            FieldValue = "Bring extra tools",
                            SectionId = 2
                        },
                        new
                        {
                            FieldId = 5,
                            FieldName = "Tools Needed",
                            FieldValue = "Wrench, Pliers",
                            SectionId = 3
                        },
                        new
                        {
                            FieldId = 6,
                            FieldName = "Materials",
                            FieldValue = "PVC pipes, Sealant",
                            SectionId = 3
                        });
                });

            modelBuilder.Entity("JobFormAPI.Models.Job", b =>
                {
                    b.Property<int>("JobId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("JobId"), 1L, 1);

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<DateTime>("ExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("JobTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("JobId");

                    b.ToTable("Jobs");

                    b.HasData(
                        new
                        {
                            JobId = 1,
                            Duration = 10,
                            ExpiryDate = new DateTime(2023, 1, 1, 18, 0, 0, 0, DateTimeKind.Unspecified),
                            JobTitle = "Handyman Services",
                            StartDate = new DateTime(2023, 1, 1, 8, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            JobId = 2,
                            Duration = 8,
                            ExpiryDate = new DateTime(2023, 1, 2, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            JobTitle = "Certified Plumber",
                            StartDate = new DateTime(2023, 1, 2, 9, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("JobFormAPI.Models.Section", b =>
                {
                    b.Property<int>("SectionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SectionId"), 1L, 1);

                    b.Property<int>("JobId")
                        .HasColumnType("int");

                    b.Property<string>("SectionName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SectionId");

                    b.HasIndex("JobId");

                    b.ToTable("Sections");

                    b.HasData(
                        new
                        {
                            SectionId = 1,
                            JobId = 1,
                            SectionName = "Details"
                        },
                        new
                        {
                            SectionId = 2,
                            JobId = 1,
                            SectionName = "Additional Info"
                        },
                        new
                        {
                            SectionId = 3,
                            JobId = 2,
                            SectionName = "Requirements"
                        });
                });

            modelBuilder.Entity("JobFormAPI.Models.Field", b =>
                {
                    b.HasOne("JobFormAPI.Models.Section", "Section")
                        .WithMany("Fields")
                        .HasForeignKey("SectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Section");
                });

            modelBuilder.Entity("JobFormAPI.Models.Section", b =>
                {
                    b.HasOne("JobFormAPI.Models.Job", "Job")
                        .WithMany("Sections")
                        .HasForeignKey("JobId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Job");
                });

            modelBuilder.Entity("JobFormAPI.Models.Job", b =>
                {
                    b.Navigation("Sections");
                });

            modelBuilder.Entity("JobFormAPI.Models.Section", b =>
                {
                    b.Navigation("Fields");
                });
#pragma warning restore 612, 618
        }
    }
}
